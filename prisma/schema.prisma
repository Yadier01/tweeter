generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Post {
  id        Int       @id @default(autoincrement())
  content   String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  likes     Like[]
  user      User      @relation(fields: [name], references: [name]) // Relation using name instead of userId

  @@index([content])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  password  String
  profile   Profile?
  posts     Post[]
  likes     Like[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  parentId  Int?
  userName  String
  parent    Comment? @relation("CommentToComment", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentToComment")
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userName], references: [name]) // Relation using name instead of userId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
